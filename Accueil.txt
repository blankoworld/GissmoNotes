Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2016-08-30T11:37:43+02:00

====== GissmoNotes - Accueil ======
Created mardi 30 août 2016

===== Description =====

Ce recueil de notes rassemble les informations au sujet du fonctionnement de l'application Gissmo (Cf. https://github.com/eost/gissmo/) ainsi que les recherches effectuées autour du projet.

===== Gissmo 2.0 =====

Ce que nous aimerions obtenir :

* [[../Backend_2.0.txt|Back-end postgreSQL]]
* [[../Trigger_2.0.txt|Trigger sur postgreSQL]] pour générer l'historique des objets + crée des interventions ([[../Clustering_2.0.txt|clustering]])
* Script de [[../Clustering_2.0.txt|clustering]] lancé régulièrement pour regrouper les modifications par intervention
* [[../API_2.0.txt|API]] à l'aide de Django + django-rest-framework
* [[../Frontend_2.0.txt|Front-end]] HTML5 + CSS3 + JS
* Liste de [[Tasks 2.0|tâches]] proposées par l'interface

Il s'agit donc de lier l'ensemble de ces éléments afin de fournir une expérience utilisateur agréable, un environnement de développement facile et créer un logiciel Open Source digne de ce nom.

===== Migration vers Gissmo 2.0 =====

Il faut planifier la [[../Migration_2.0.txt|Migration vers Gissmo 2.0]].

===== TODO avant une sortie Gissmo =====

* Installer Gissmo en mode production (avec SSL!) sur sa machine pour vérifier l'accès à :
	* l'API
	* l'interface admin
	* les documents dans l'API
	* les documents dans l'interface admin
	* l'affichage de la carte
* Ajouter une couche SSL Nginx pour vérifier ces accès !!! (Cf. liste précédente)
* Changer gissmo/init.py pour monter la version
* Adapter le CHANGELOG pour la version courante
* Modifier la documentation pour augmenter le numéro de version
* Appliquer un TAG git v1.x.y
* git push --tags
* Readthedocs : aller sur la configuration pour mettre la nouvelle version par défaut
* Rédiger un courriel aux utilisateurs et l'ENVOYER à Jérôme et Maxime
* Envoyer le courriel FINAL aux utilisateurs pour cette nouvelle version

===== Veille =====

Les outils utilisés sont forcément ceux à suivre : 

* Python
* Django
* postgreSQL
* django-rest-framework
* Docker
* Github
* [facultatif] Readthedocs (ne contient pas de flux RSS)
* Travis
* Mkdocs
* XXX : surveiller aussi l'outil utilisé pour faire la veille (exemple si on choisi MoonMoon, faire un flux pour les mises à jour dudit outil)

À voir s'il est intéressant de surveiller les outils JS comme : 

* AngularJS
* Ember JS
* React
* ELM
