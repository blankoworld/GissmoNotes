Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2016-08-30T14:21:36+02:00

====== Backend 2.0 ======
Created mardi 30 août 2016

Ce que nous attendons du Backend de la version 2.0.

===== Schéma =====

Ci dessous le schéma de la version 2.0 (bêta 1) : 


{{~/Documents/schemas/schema_gissmo_v2.0-beta5.png}}


Ce qui donne les dépendances de module suivantes : 

* affiliation dépend de : 
	* django.contrib.auth pour les User
* document dépend de :
	* django.contrib.auth pour les Owner
* place dépend de : 
	* affiliation pour PlaceOperator
* project dépend de : 
	* place
	* django.contrib.auth
* equipment dépend de : 
	* place
	* django.contrib.auth
* network dépend de : 
	* equipment
	* place
* intervention dépend de : 
	* place

===== Explications =====

* Les principaux objets : 
	* Place
	* Equipment
	* Installation
	* Channel
* Les « Project » sont simplement un « Group » auquel on a rajouté un manager
* Les « Agency » sont des organismes comme une société, un observatoire, etc.
* Une « Place » est un endroit exact tel qu'un endroit de stockage
* Pour avoir les lieux connus de l'EOST (observatoire), il suffit d'afficher les « Place » étant liées à l'EOST

Généralement on procède de la manière suivante : 

* On ajoute des utilisateurs
* On ajoute des projets
* On ajoute ces utilisateurs aux projets
* On cherche un endroit pour une station et on note ce lieu dans Place
* On commande un équipement chez un fabricant particulier. On crée donc un type, un model, puis un équipement
* On reçoit l'équipement et on entre ses informations dans « Configuration »
* On place cet équipement sur une station à l'aide de l'objet « Installation »

Une fois les enregistrements effectués, au moindre changement un [[../Trigger_2.0.txt|Trigger]] est lancé pour générer une Intervention.

L'utilisateur va sur l'intervention et : 

* ajoute des utilisateurs à l'intervention
* ajoute des opérateurs (Agency) à l'intervention
* valide l'intervention

===== Transitions =====

Avant la 2.0, on s'occupait de gérer des actions et des états. Ceci pour StationSite et Equipment.

Pour éviter une redondance de l'information, et faciliter la saisie et la compréhension par l'utilisateur, il est plus opportun d'utiliser seulement le nom des états. Et de permettre le passage d'un état à un autre suivant une liste de compatibilité.

Par exemple sur le schéma suivant, quand on est "Available", on peut aller en l'état "Testing", "Ready" ou "Closed".

L'implémentation à faire, selon moi est de pouvoir faire une liste des états "compatibles". Et de n'afficher que ceux là dans l'interface de saisie.

==== État des Place ====

Voici le schéma des états d'un lieu donné : 

{{~/Documents/schemas/place_states_20170223.png}}

==== État des équipements ====

Voici le schéma des états d'un équipement - validé avec Maxime : 

{{~/Documents/schemas/equipment_states_20170223.png}}


===== L'objet « Place » =====

GISSMO étant un outil de gestion de matériel, nous utilisons des lieux pour stocker, entreproser, recevoir, envoyer, tester, installer nos équipements. C'est à cet effet qu'existe l'objet « Place ».

Il définit une longitude, latitude, une adresse, etc. d'un lieu spécifique utilisé pour une station, un organisme (Agency) ou une intervention.

Étant donné que l'utilisateur pense souvent à un endroit quand il parle d'un organisme ou d'une station, a été implémenté la possibilité de définir des lieux par défaut.

Ainsi il est suggéré très fortement, à la création d'un organisme, de définir son adresse et son lieu afin de pouvoir créer et lier un objet « Place » par défaut à cet organisme.
Il en est de même pour une station.
On définit ainsi un lieu de type "Warehouse" pour un organisme, et un lieu de type "Outside" pour une station.

===== Configuration =====

La configuration des équipements se situe à 2 niveaux : 

* La configuration par défaut d'un équipement
* La configuration de l'équipement sur une installation précise de celui-ci à un lieu donné (table network_installation_configurations)

Si la seconde option (configuration de l'équipement sur une installation précise de celui-ci) est facile à obtenir, la configuration par défaut d'un équipement est un peu moins triviale : on doit soustraire la configuration des installations pour qu'il ne reste que celle par défaut de l'équipement.

On utilise la requête SQL suivante (pour donner un ordre d'idée avec l'équipement dont l'ID est 15) : 

SELECT id, parameter, value, equipment_id FROM equipment_configuration WHERE id not IN (SELECT n.configuration_id FROM network_installation_configurations as n, network_installation as i, equipment_equipment as e WHERE n.installation_id = i.id AND i.equipment_id = e.id AND i.equipment_id = 15) AND equipment_id = 15;

===== Les Projets et les Agences =====

La séparation entre projets et agences est bien définie par les règles suivantes.

* Les projets gèrent des personnes (User) et des stations (Station).
* Les agences sont des regroupements de personnes (User) dans des lieux spécifiques (Place).
* Les agences gèrent les lieux (Place).
* Une station (gérée par un projet) possède plusieurs lieux (Place) qui sont gérés par des agences (Agency).
